name: gps-routes

networks:
  default:
  homelab-net:
    external: true

services:
  api-server:
    container_name: api_server
    image: ghcr.io/rm-hull/gps-routes-api:latest
    command:
      - api-server
      - "8080"
    env_file:
      - .env
    environment:
      - OS_NAMES_API_KEY
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_PASSWORD
      - POSTGRES_PORT
      - POSTGRES_SCHEMA
      - POSTGRES_USER
    restart: always
    healthcheck:
      disable: false
    depends_on:
      postgis:
        condition: service_healthy
      run-migrations:
        condition: service_completed_successfully
      import-data:
        condition: service_completed_successfully
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gps_routes.entrypoints=websecure"
      - "traefik.http.routers.gps_routes.rule=Host(`api.homelab.destructuring-bind.org`) && PathPrefix(`/v1/gps-routes/`)"
      - "traefik.http.services.gps_routes.loadbalancer.server.port=8080"
      - "cloudflare.tunnel.enable=true"
      - "cloudflare.tunnel.hostname=api.destructuring-bind.org"
      - "cloudflare.tunnel.service=http://api_server:8080"
    networks:
      - default
      - homelab-net

  run-migrations:
    container_name: run_migrations
    image: ghcr.io/rm-hull/gps-routes-api:latest
    command:
      - migration
      - up
      - /data/migrations/
    env_file:
      - .env
    environment:
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_PASSWORD
      - POSTGRES_PORT
      - POSTGRES_SCHEMA
      - POSTGRES_USER
    volumes:
      - ./db/migrations:/data/migrations
    restart: "no"
    healthcheck:
      disable: true
    depends_on:
      postgis:
        condition: service_healthy
    networks:
      - default

  import-data:
    container_name: import_data
    image: ghcr.io/rm-hull/gps-routes-api:latest
    command:
      - import
      - /data/backup/
    env_file:
      - .env
    environment:
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_PASSWORD
      - POSTGRES_PORT
      - POSTGRES_SCHEMA
      - POSTGRES_USER
    volumes:
      - ./data/backup:/data/backup
    restart: "no"
    healthcheck:
      disable: true
    depends_on:
      postgis:
        condition: service_healthy
      run-migrations:
        condition: service_completed_successfully
    networks:
      - default

  postgis:
    container_name: postgis
    image: ghcr.io/baosystems/postgis:latest
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_PASSWORD
      - POSTGRES_PORT
      - POSTGRES_SCHEMA
      - POSTGRES_USER
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      retries: 5
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    networks:
      - default
      - homelab-net
